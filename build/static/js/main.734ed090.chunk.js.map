{"version":3,"sources":["tools/dateTimeFunctions.js","components/SymbolTable/index.js","components/SymbolTable/SymbolTable.js","svc/baseWebService.ts","exceptions/InvalidParameterException.ts","exceptions/ValidateException.ts","svc/symbolWebService.ts","routes/apiRoutes.js","store/sagas/symbolSagas.js","store/sagas/index.js","store/actionTypes.js","store/actionCreators.js","store/index.js","store/modelReducer.js","components/SymbolChart/index.js","store/dataTypes.js","components/SymbolChart/SymbolChart.js","components/SymbolDisplay/SymbolDisplay.js","components/SymbolDisplay/index.js","components/Timer/Timer.js","components/Timer/index.js","components/ExceptionHandler/ExceptionHandler.js","components/ExceptionHandler/index.js","components/ErrorMessage/index.js","components/ErrorMessage/ErrorMessage.js","pages/Main/index.js","pages/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["toShortTime","dateTime","getHours","slice","getMinutes","connect","state","ownProps","data","symbol","map","item","value","props","header","emptyMessage","field","BaseWebService","baseUrl","this","url","method","Axios","request","InvalidParameterException","paramName","message","Error","ValidateException","Member","Message","SymbolWebService","base","substring","second","sendRequest","response","slave","Date","rates","apiRoutes","currencySvc","fetchSymbol","symbolSvc","action","call","GetCurrentSymbol","dataType","currencyData","put","storeSymbol","rootSaga","takeEvery","loadSymbol","type","sagaMiddleware","createSagaMiddleware","createStore","filter","Number","HISTORY_LEN","error","applyMiddleware","run","labels","captions","multiAxisData","datasets","index","label","fill","backgroundColor","borderColor","yAxisID","multiAxisOptions","responsive","hoverMode","stacked","scales","yAxes","display","position","id","length","options","key","SymbolDisplay","onLoad","Component","dispatch","Timer","timer","setState","setInterval","onTimer","numSec","clearInterval","ExceptionHandler","componentDidCatch","info","onException","children","mapDispatchToProps","showError","show","severity","text","Main","store","REFRESH_SEC","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"iOAAO,IAAMA,EAAc,SAACC,GAAD,iBAAkB,IAAMA,EAASC,YAAYC,OAAO,GAApD,aAA2D,IAAKF,EAASG,cAAcD,OAAO,KCQ1GE,eAJS,SAACC,EAAOC,GAAR,MAAsB,CAC1CC,MAAOF,EAAMC,EAASE,SAAW,IAAIC,KAAI,SAAAC,GAAI,MAAK,CAACV,SAAUD,EAAYW,EAAKV,UAAWW,MAAOD,EAAKC,aAG1FP,ECJA,SAAqBQ,GAChC,OACI,6BACI,6BACM,kBAAC,YAAD,CAAWD,MAAOC,EAAML,KAAMM,OAAQD,EAAMJ,OAAQM,aAAa,+BAC/D,kBAAC,SAAD,CAAQC,MAAM,WAAWF,OAAO,cAChC,kBAAC,SAAD,CAAQE,MAAM,QAAQF,OAAO,kB,sFCR5BG,E,WAGjB,WAAYC,GAAiB,yBAFnBA,aAEkB,EACxBC,KAAKD,QAAUA,E,wDAGIE,EAAaC,EAAgBb,GAChD,OAAOc,IAAMC,QAAQ,CACjBH,IAAKA,EACLC,OAAQA,EACRb,KAAMA,Q,aCbLgB,EAAb,kDAGI,WAAYC,GAA0D,IAAD,EAAtCC,EAAsC,uDAApB,oBAAoB,4BACjE,cAAMA,IAHHD,eAE8D,EAEjE,EAAKA,UAAYA,EAFgD,EAHzE,sBAA+CE,QCAlCC,EAAb,kDACI,WAAmBC,GAA4D,IAAD,EAA3CC,EAA2C,uDAAzB,yBAAyB,4BAC1E,cAAMA,IADSD,SAA2D,EADlF,sBAAuCF,QCKlBI,E,kDAEjB,WAAYX,GACR,GADsB,qBACjBA,EACD,MAAM,IAAII,EAA0B,OAFnB,mBAIfJ,G,sGAGoBX,G,8EAErBA,E,sBACK,IAAIe,EAA0B,U,UAGlCQ,EAAOvB,EAAOwB,UAAU,EAAG,GAC3BC,EAASzB,EAAOwB,UAAU,GAE3BD,E,sBAAY,IAAIJ,EAAkB,SAAU,iD,UAC5CM,E,sBAAc,IAAIN,EAAkB,SAAU,mD,wBAI5BT,KAAKgB,YAAL,UAAoBhB,KAAKD,QAAzB,gBAAwCc,EAAxC,oBAAwDE,GAC3E,MAAO,M,eADLE,E,yBAEC,CACHJ,KAAMA,EACNK,MAAOH,EACPjC,SAAU,IAAIqC,KACd1B,MAAOwB,EAAS5B,KAAK+B,MAAML,K,6GA7BOjB,GCG/BuB,EALG,CAEdC,YAAa,2C,WCEAC,GAFXC,EAAY,IAAIZ,EAAiBS,EAAUC,aAE1C,SAAUC,EAAYE,GAAtB,uEAE0B,OAF1B,SAEgCC,YAAK,CAACF,EAAWA,EAAUG,kBAAmBF,EAAOG,UAFrF,OAGK,OADMC,EAFX,gBAGWC,YAAIC,EAAYN,EAAOG,SAAUC,IAH5C,uC,eCHkBG,GAAV,SAAUA,IAAV,iEACX,OADW,SACLC,YCLU,ODKMV,GADX,uCEFR,IAAMW,EAAa,SAAC5C,GAAD,MAAa,CACnC6C,KDHgB,OCIhBP,SAAUtC,IAGDyC,EAAc,SAACzC,EAAQD,GAAT,MAAmB,CAC1C8C,KDPiB,QCQjBP,SAAUtC,EACVD,KAAMA,ICLJ+C,EAAiBC,cAERC,eCJA,SAACnD,EAAOsC,GACnB,OAAQA,EAAOU,MAEX,IHLa,QGMT,OAAO,eACAhD,EADP,eAEKsC,EAAOG,SAFZ,uBAGYzC,EAAMsC,EAAOG,WAAa,IAAIW,QAAO,SAAA/C,GAAI,OAAIgD,OAAOhD,EAAKV,YAAY0D,OAAOf,EAAOpC,KAAKP,aAAWE,OAAMyD,KAHrH,CAIQ,CAAC3D,SAAU2C,EAAOpC,KAAKP,SAAUW,MAAOgC,EAAOpC,KAAKI,WAIhE,IHbkB,aGmBlB,IHlBkB,aGmBd,OAAO,eACAN,EADP,CAEIuD,MAAM,eAAKjB,EAAOpC,QAG1B,QACI,OAAOF,GAAS,MDrBawD,YAAgBP,IAEzDA,EAAeQ,IAAIZ,GEJnB,IASe9C,eATS,SAACC,GAAD,MAAY,CAChC0D,QAAS1D,EAAK,QAAY,IAAII,KAAI,SAAAC,GAAI,OAAIX,EAAYW,EAAKV,aAC3DO,KAAM,EACDF,EAAK,QAAY,IAAII,KAAI,SAAAC,GAAI,OAAIA,EAAKC,UACtCN,EAAK,QAAY,IAAII,KAAI,SAAAC,GAAI,OAAIA,EAAKC,UAE3CqD,SAAU,CCVQ,SADA,aDcP5D,EEVA,SAAqBQ,GAEhC,IAAMqD,EAAgB,CAClBF,OAAQnD,EAAMmD,QAAU,GACxBG,UAAWtD,EAAML,MAAQ,IAAIE,KAAK,SAACC,EAAMyD,GAAP,MAAkB,CAChDC,MAAOxD,EAAMoD,SAASG,GACtBE,MAAM,EACNC,gBAAgB,IAAD,OAAM,KAAOH,GAC5BI,YAAY,IAAD,OAAM,KAAOJ,GACxBK,QAAQ,UAAD,OAAYL,EAAQ,GAC3B5D,KAAK,YAAKK,EAAML,KAAK4D,SAIvBM,EAAmB,CACrBC,YAAY,EACZC,UAAW,QACXC,SAAS,EACTC,OAAQ,CACJC,OAAQlE,EAAML,MAAQ,IAAIE,KAAK,SAACC,EAAMyD,GAAP,MAAkB,CAC7Cd,KAAM,SACN0B,SAAS,EACTC,SAAUb,EAAQ,EAAI,QAAU,OAChCc,GAAG,UAAD,OAAYd,EAAM,SAMhC,OACI,iCAEIvD,EAAMmD,OAAOmB,OAAS,EAChB,kBAAC,QAAD,CAAO7B,KAAK,OAAO9C,KAAM0D,EAAekB,QAASV,IACjD,sBAIL7D,EAAMoD,UAAY,IAAIvD,KAAI,SAAAC,GAAI,OAAI,kBAAC,EAAD,CAAa0E,IAAK1E,EAAMF,OAAQE,WCvC1D2E,E,kLAGbnE,KAAKN,MAAM0E,W,+BAIX,OACI,6BACI,6BACI,kBAAC,EAAD,Y,GAVuBC,aCU5BnF,cAAQ,MATI,SAACoF,GAAD,MAAe,CACtCF,OAAQ,WACJE,EAASpC,EHNK,WGOdoC,EAASpC,EHNK,eGYPhD,CAAkCiF,GCX5BI,E,kDAEjB,WAAY7E,GAAO,IAAD,8BACd,cAAMA,IAEDP,MAAQ,CACTqF,MAAQ,MAJE,E,gEASdxE,KAAKyE,SAAU,CACXD,MAAOE,YACP1E,KAAKN,MAAMiF,SAAY,aAAW3E,KAAKN,MAAMkF,QAAU,S,6CAKvD5E,KAAKb,MAAMqF,OACXK,kB,+BAKJ,OACI,yC,GAzBuBR,aCUpBnF,cAAQ,MAPI,SAACoF,EAAUlF,GAAX,MAAyB,CAChDuF,QAAS,WAELL,EAASpC,EAAW9C,EAASE,QAAU,SAIhCJ,CAAkCqF,GCV5BO,E,4MAEjBC,kBAAoB,SAACrC,EAAOsC,GAAR,OAChB,EAAKtF,MAAMuF,YAAYvC,EAAOsC,I,uDAG9B,OAAOhF,KAAKN,MAAMwF,a,GANoBb,aCExCc,EAAqB,CACvBF,YXQqB,SAACvC,EAAOsC,GAAR,MAAkB,CACvC7C,KDZsB,aCatB9C,KAAM,CACF+F,WAAW,EACX1C,MAAOA,EACPsC,KAAMA,MWVC9F,cAAQ,KAAMiG,EAAdjG,CAAkC4F,G,QCLjD,IAKe5F,eALS,SAACC,GAAD,MAAY,CAChCkG,MAAOlG,EAAMuD,OAAS,IAAI0C,UAC1B7E,SAAUpB,EAAMuD,OAAS,IAAIsC,QAGlB9F,ECLA,SAAsBQ,GACjC,OACI,6BACKA,EAAM2F,MAAQ,kBAAC,UAAD,CAASC,SAAS,QAAQC,KAAM7F,EAAMa,cCJlDiF,E,uKCSP,OACI,oCACI,kBAAC,IAAD,CAAUC,MAAOA,GACb,kBAAC,EAAD,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAOb,OAAQc,IAAkBpG,OAAO,WACxC,kBAAC,EAAD,CAAOsF,OAAQc,IAAkBpG,OAAO,WACxC,kBAAC,EAAD,a,GATU+E,aCAnBsB,OANf,WACE,OACE,kBAAC,EAAD,OCOgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,qBCTNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAlE,GACLmE,QAAQnE,MAAMA,EAAMnC,a","file":"static/js/main.734ed090.chunk.js","sourcesContent":["export const toShortTime = (dateTime) => `${(\"0\" + dateTime.getHours()).slice(-2)}:${(\"0\"+ dateTime.getMinutes()).slice(-2)}`;","import { connect } from \"react-redux\";\r\nimport SymbolTable from './SymbolTable';\r\nimport {toShortTime} from \"../../tools/dateTimeFunctions\";\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    data: (state[ownProps.symbol] || []).map(item => ({dateTime: toShortTime(item.dateTime), value: item.value}))\r\n});\r\n\r\nexport default connect(mapStateToProps)(SymbolTable);","import React from 'react';\r\nimport { DataTable } from \"primereact/datatable\";\r\nimport {Column} from \"primereact/column\";\r\n\r\nexport default function SymbolTable(props) {\r\n    return (\r\n        <div>\r\n            <div>\r\n                { <DataTable value={props.data} header={props.symbol} emptyMessage=\"There is no data to display\">\r\n                    <Column field=\"dateTime\" header=\"Tick Time\"/>\r\n                    <Column field=\"value\" header=\"Current\"/>\r\n                </DataTable> }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import Axios, {  Method, AxiosResponse } from 'axios';\r\n\r\nexport default class BaseWebService {\r\n    protected baseUrl: string;\r\n\r\n    constructor(baseUrl: string){\r\n        this.baseUrl = baseUrl;\r\n    }\r\n\r\n    protected sendRequest (url: string, method: Method, data: any ):Promise<AxiosResponse<any>> {\r\n        return Axios.request({ \r\n            url: url, \r\n            method: method, \r\n            data: data\r\n        });\r\n    }\r\n}","export class InvalidParameterException extends Error {\r\n    public paramName : string;\r\n\r\n    constructor(paramName: string, message: string = \"Invalid parameter\"){\r\n        super(message);\r\n        this.paramName = paramName;\r\n    }\r\n}","export class ValidateException extends Error {\r\n    constructor(public Member: string, Message: string = \"Model validation error\"){\r\n        super(Message);\r\n    }\r\n}","import BaseWebService from \"./baseWebService\";\r\nimport { InvalidParameterException } from \"../exceptions/InvalidParameterException\";\r\nimport { CurrencyRate } from \"../models/CurrencyRate\";\r\nimport { ValidateException } from \"../exceptions/ValidateException\";\r\n\r\nexport default class SymbolWebService extends BaseWebService {\r\n\r\n    constructor(url: string) {\r\n        if (!url) {\r\n            throw new InvalidParameterException(\"url\");\r\n        }\r\n        super(url);\r\n    }\r\n\r\n    public async GetCurrentSymbol(symbol: string): Promise<CurrencyRate> {\r\n\r\n        if (!symbol){\r\n            throw new InvalidParameterException(\"symbol\");\r\n        }\r\n\r\n        const base = symbol.substring(0, 3);\r\n        const second = symbol.substring(3);\r\n\r\n        if (!base) throw new ValidateException(\"symbol\", \"Validation error. Could not parse base symbol\");\r\n        if (!second) throw new ValidateException(\"symbol\", \"Validation error. Could not parse second symbol\")\r\n        \r\n        //{\"rates\":{\"RUB\":78.6935410404},\"base\":\"USD\",\"date\":\"2020-03-27\"}\r\n\r\n        const response = await this.sendRequest(`${this.baseUrl}base=${base}&symbols=${second}`, \r\n            'get', null);\r\n        return {\r\n            base: base,\r\n            slave: second,\r\n            dateTime: new Date(),\r\n            value: response.data.rates[second] as number\r\n        }\r\n    }\r\n}","//https://free.currconv.com/api/v7/convert?q=USD_RUB&compact=ultra&apiKey=698d221bf9071b151d6a\r\n//https://api.exchangeratesapi.io/latest?base=USD&symbols=RUB\r\n//\"https://free.currconv.com/api/v7/convert?compact=ultra&apiKey=698d221bf9071b151d6a\"\r\nconst apiRoutes = {\r\n    //currencySvc: \"http://data.fixer.io/api/latest?access_key=4ba0de0ce3580063e6c9170d84d07904\"\r\n    currencySvc: \"https://api.exchangeratesapi.io/latest?\"\r\n};\r\n\r\nexport default apiRoutes;","import { call, put } from \"redux-saga/effects\";\r\nimport { storeSymbol } from \"../\";\r\nimport SymbolWebService from \"../../svc/symbolWebService\";\r\nimport apiRoutes from \"../../routes/apiRoutes\";\r\n\r\nconst symbolSvc = new SymbolWebService(apiRoutes.currencySvc);\r\n\r\nexport function* fetchSymbol(action) {\r\n        //try {\r\n            const currencyData = yield call([symbolSvc, symbolSvc.GetCurrentSymbol], action.dataType); // выполняем загрузку данных из веб-сервиса\r\n            yield put(storeSymbol(action.dataType, currencyData)); // сохранить данные через reducer\r\n        //}\r\n        //catch (e) {\r\n        //    console.log(e)\r\n        //    yield put({type: \"ERROR\"});\r\n        //}\r\n}","import { takeEvery } from \"redux-saga/effects\";\r\nimport { fetchSymbol } from \"./symbolSagas\";\r\nimport { LOAD } from \"../\";\r\n\r\nexport default function* rootSaga() {\r\n    yield takeEvery(LOAD, fetchSymbol); \r\n}","export const LOAD = \"LOAD\";\r\nexport const STORE = \"STORE\";\r\nexport const SHOW_ERROR = \"SHOW_ERROR\";\r\nexport const HIDE_ERROR = \"HIDE_ERROR\";","import { LOAD, STORE, SHOW_ERROR, HIDE_ERROR } from \"./actionTypes\";\r\n\r\nexport const loadSymbol = (symbol) => ({\r\n    type: LOAD,\r\n    dataType: symbol\r\n});\r\n\r\nexport const storeSymbol = (symbol, data) => ({\r\n    type: STORE,\r\n    dataType: symbol,\r\n    data: data\r\n});\r\n\r\nexport const showError = (error, info) => ({\r\n    type: SHOW_ERROR,\r\n    data: {\r\n        showError: true,\r\n        error: error,\r\n        info: info\r\n    }\r\n});\r\n\r\nexport const hideError = () => ({\r\n    type: HIDE_ERROR,\r\n    data: {\r\n        showError: false,\r\n        error: null,\r\n        info: null\r\n    }\r\n});","import { createStore, applyMiddleware } from \"redux\";\r\nimport modelReducer from \"./modelReducer\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"./sagas\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport default createStore(modelReducer, applyMiddleware(sagaMiddleware));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport { LOAD, STORE, SHOW_ERROR, HIDE_ERROR } from \"./actionTypes\";\r\nexport { loadSymbol, storeSymbol, showError, hideError } from \"./actionCreators\";\r\nexport {EURUSD, EURRUB} from \"./dataTypes\";","import { STORE, SHOW_ERROR, HIDE_ERROR } from \"./actionTypes\";\r\nimport { HISTORY_LEN } from \"../config/consts\";\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n\r\n        case STORE:\r\n            return { \r\n                ...state, \r\n                [action.dataType]: [\r\n                    ...(state[action.dataType] || []).filter(item => Number(item.dateTime)!==Number(action.data.dateTime)).slice(HISTORY_LEN*-1),\r\n                    {dateTime: action.data.dateTime, value: action.data.value}\r\n                ]\r\n            };\r\n        \r\n        case SHOW_ERROR:\r\n            return {\r\n                ...state,\r\n                error: {...action.data}\r\n            }\r\n        \r\n        case HIDE_ERROR:\r\n            return {\r\n                ...state,\r\n                error: {...action.data}\r\n            }\r\n\r\n        default:\r\n            return state || {};\r\n    }\r\n\r\n    \r\n}\r\n","import SymbolChart from \"./SymbolChart\";\r\nimport { connect } from \"react-redux\";\r\nimport { EURUSD, EURRUB } from \"../../store\";\r\nimport {toShortTime} from \"../../tools/dateTimeFunctions\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    labels: (state[EURUSD] || []).map(item => toShortTime(item.dateTime)),\r\n    data: [\r\n        (state[EURUSD] || []).map(item => item.value),\r\n        (state[EURRUB] || []).map(item => item.value)\r\n    ],\r\n    captions: [EURUSD, EURRUB]\r\n});\r\n\r\nexport default connect(mapStateToProps)(SymbolChart);","export const EURRUB = \"EURRUB\";\r\nexport const EURUSD = \"EURUSD\";","import React from 'react'\r\nimport {Chart} from 'primereact/chart'; \r\nimport SymbolTable from \"../SymbolTable\";\r\n\r\nexport default function SymbolChart(props) {\r\n\r\n    const multiAxisData = {\r\n        labels: props.labels || [],\r\n        datasets: (props.data || []).map( (item, index) => ({\r\n            label: props.captions[index],\r\n            fill: false,\r\n            backgroundColor: `#${255 << index}`,\r\n            borderColor: `#${255 << index}`,\r\n            yAxisID: `y-axis-${index + 1}`,\r\n            data: [...props.data[index]]\r\n        }))\r\n    };\r\n\r\n    const multiAxisOptions = {\r\n        responsive: true,\r\n        hoverMode: 'index',\r\n        stacked: false,\r\n        scales: {\r\n            yAxes: (props.data || []).map( (item, index) => ({\r\n                type: 'linear',\r\n                display: true,\r\n                position: index % 2 ? \"right\" : \"left\",\r\n                id: `y-axis-${index+1}`   \r\n                })\r\n            )            \r\n        }\r\n    }\r\n\r\n    return (\r\n        <div> {\r\n            \r\n            props.labels.length > 0 \r\n                ? <Chart type=\"line\" data={multiAxisData} options={multiAxisOptions} />\r\n                : \"No data to display\"\r\n        }\r\n        {\r\n            \r\n            (props.captions || []).map(item => <SymbolTable key={item} symbol={item}/> )\r\n        }\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport SymbolChart from \"../SymbolChart\";\r\n\r\nexport default class SymbolDisplay extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.onLoad();\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <SymbolChart/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import SymbolDisplay from \"./SymbolDisplay\";\r\nimport {connect} from \"react-redux\";\r\nimport { loadSymbol, EURRUB, EURUSD } from \"../../store\";\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    onLoad: () => {\r\n        dispatch(loadSymbol(EURRUB));\r\n        dispatch(loadSymbol(EURUSD));\r\n    }\r\n});\r\n\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(SymbolDisplay);","import React, { Component } from 'react'\r\n\r\nexport default class Timer extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            timer : null\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState( {\r\n            timer: setInterval(\r\n            this.props.onTimer || (() => {}), this.props.numSec || 60*1000)\r\n            });\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        if (this.state.timer) \r\n            clearInterval();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <></>\r\n        )\r\n    }\r\n}\r\n","import Timer from \"./Timer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport { loadSymbol } from \"../../store\";\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onTimer: () => {\r\n        //console.log(ownProps.symbol);\r\n        dispatch(loadSymbol(ownProps.symbol || \"\"));\r\n    }\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Timer);","import { Component } from 'react'\r\n\r\nexport default class ExceptionHandler extends Component {\r\n\r\n    componentDidCatch = (error, info) => \r\n        this.props.onException(error, info);\r\n\r\n    render() {\r\n        return this.props.children;\r\n    }\r\n}\r\n","import ExceptionHandler from \"./ExceptionHandler\";\r\nimport {connect} from \"react-redux\";\r\nimport { showError } from \"../../store\";\r\n\r\nconst mapDispatchToProps = {\r\n    onException: showError\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ExceptionHandler);","import ErrorMessage from \"./ErrorMessage\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    show: (state.error || {}).showError,\r\n    message: (state.error || {}).info\r\n})\r\n\r\nexport default connect(mapStateToProps)(ErrorMessage);","import React from 'react';\r\nimport {Message} from 'primereact/message';\r\n\r\nexport default function ErrorMessage(props) {\r\n    return (\r\n        <div>\r\n            {props.show && <Message severity=\"error\" text={props.message}/>}\r\n        </div>\r\n    )\r\n}\r\n","import Main from \"./Main\";\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport SymbolDisplay from \"../../components/SymbolDisplay\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"../../store\";\r\nimport Timer from \"../../components/Timer\";\r\nimport { REFRESH_SEC } from \"../../config/consts\";\r\nimport ExceptionHandler from \"../../components/ExceptionHandler\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\n\r\nexport default class Main extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <Provider store={store}>\r\n                    <ExceptionHandler>\r\n                        <ErrorMessage/>\r\n                        <Timer numSec={REFRESH_SEC*1000} symbol=\"EURUSD\"/>\r\n                        <Timer numSec={REFRESH_SEC*1000} symbol=\"EURRUB\"/>\r\n                        <SymbolDisplay/>\r\n                    </ExceptionHandler>\r\n                </Provider>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport Main from \"./pages/Main\";\n\nfunction App() {\n  return (\n    <Main/>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}